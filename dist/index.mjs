import t from"clear";import e from"inquirer";import o from"node:path";import{accessSync as a,constants as r}from"node:fs";import{platform as i}from"node:process";import n from"chalk";const s=t=>"win32"===i?"file:\\\\\\"+o.resolve(o.join("pages",t+".js")):o.resolve(o.join("pages",t+".js")),p=async t=>{try{a(s(t),r.F_OK);const e=await import(s(t));if(!e.default)throw new Error(`Could not load ${t}, missing default export.`);if(!t.startsWith("_")&&!e.menu)throw new Error(`Could not load ${t}, missing named export menu.`);if(!e.getProps)throw new Error(`Could not load ${t}, missing named export getProps.`);return e}catch(t){if(t.message.includes("ENOENT"))throw new Error("Could not find that file in the pages/ directory.");throw new Error(t.message)}},w=async(o,a={})=>{const{default:r,getProps:i}=await p("_app"),{default:s,getProps:m}=await p("_exit");if(o.startsWith("_"))throw new Error(`Could not load ${o}, termpura special file.`);const{default:c,menu:l,getProps:u}=await p(o);t();const f=await i(a);await r(o,{...f});const d=await u(a),h=l instanceof Function?l():l,{a:g}=await e.prompt(((t,o="")=>[{type:"list",name:"a",message:"\b\b"+n.white(o),choices:[new e.Separator,...t,{name:n.white("Return"),value:"return"}],default:"",prefix:""}])(await(async t=>new Promise((e=>{const o=Object.keys(t),a=Object.values(t),r=[];for(const t in o)r[t]={name:n.white(o[t]),value:a[t]};e(r)})))(h),d.menuMessage));if("return"===g&&"index"===o){const e=await m(a);t(),await s(e),process.exit(0)}"return"===g&&await w("index");const x=await c(g,{...d});x.to?await w(x.to,x.pass):await w(o,x.pass)};export{w as loadPage};
